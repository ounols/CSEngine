# Template C++ Application

# This template allows you to validate your C++ application.
# The workflow allows running tests and code linting on the default branch.


image: gcc:10.2

test: &buildTest
  step:
    name: Build the CSEngine
    script:
      # Print the Linux version.
      - uname -a
      # Print the gcc version.
      - gcc --version
      # Setting Environment
      - apt-get update
      - apt-get -y install cmake build-essential mesa-common-dev libglfw3 libglfw3-dev libglew-dev
      # Using CMake
      - mkdir build
      - cd build
      - cmake -DCMAKE_BUILD_TYPE=Debug ../platforms/Linux
      - cmake --build .
    after-script:
      - if [ -f build/CSEngine.app ]; then wget -O build-result.svg "https://img.shields.io/badge/build-passing-87CF3E?style=flat-square&logo=linux&logoColor=white"; else wget -O build-result.svg "https://img.shields.io/badge/build-failed-DC382D?style=flat-square&logo=linux&logoColor=white"; fi
    artifacts:
      - build-result.svg

upload-badge: &upload-status-badge
    step:
      name: Upload the build status badge
      script:
        - ls /opt/atlassian/pipelines/agent/build
        - pipe: atlassian/bitbucket-upload-file:0.1.8
          variables:
            BITBUCKET_USERNAME: $BITBUCKET_USERNAME
            BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
            FILENAME: 'build-result.svg'

pipelines:
  default:
        - <<: *buildTest
        - <<: *upload-status-badge